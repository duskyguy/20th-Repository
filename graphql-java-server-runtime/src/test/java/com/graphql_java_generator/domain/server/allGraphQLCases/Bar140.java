/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.server.allGraphQLCases;

import java.util.HashMap;
import java.util.Map;


import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;


/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */

@GraphQLObjectType("Bar140")
@SuppressWarnings("unused")
public class Bar140 
	implements I2Bar140, IBar140{


	public Bar140(){
		// No action
	}

	@GraphQLScalar(fieldName = "name", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String name;




	/**
	 */
	@Override
	public void setName(java.lang.String name) {
		if (name == null || name instanceof java.lang.String) {
			this.name = (java.lang.String) name;
		} else {
			throw new IllegalArgumentException("The given name should be an instance of java.lang.String, but is an instance of "
					+ name.getClass().getName());
		}
	}
 

	/**
	 */
	@Override
	public java.lang.String getName() {
		return name;
	}

     public String toString() {
        return "Bar140 {"
				+ "name: " + name
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private java.lang.String name;

		public Builder withName(java.lang.String name) {
			this.name = name;
			return this;
		}

		public Bar140 build() {
			Bar140 _object = new Bar140();
			_object.setName(name);
			return _object;
		}
	}
}
