/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.server.allGraphQLCases;

import java.util.HashMap;
import java.util.Map;


import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;



/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */

@GraphQLObjectType("Foo140")
@SuppressWarnings("unused")
public class Foo140 
	implements I2Foo140, IFoo140{


	public Foo140(){
		// No action
	}

	
	@GraphQLNonScalar(fieldName = "bar", graphQLTypeSimpleName = "Bar140", javaClass = Bar140.class)
	Bar140 bar;




	/**
	 */
	@Override
	public void setBar(IBar140 bar) {
		if (bar == null || bar instanceof Bar140) {
			this.bar = (Bar140) bar;
		} else {
			throw new IllegalArgumentException("The given bar should be an instance of Bar140, but is an instance of "
					+ bar.getClass().getName());
		}
	}

	/**
	 */
	@Override
	public void setBar(I2Bar140 bar) {
		if (bar == null || bar instanceof Bar140) {
			this.bar = (Bar140) bar;
		} else {
			throw new IllegalArgumentException("The given bar should be an instance of Bar140, but is an instance of "
					+ bar.getClass().getName());
		}
	}
 

	/** 
	 * As the type declared in the class is not inherited from one of the implemented interfaces, we need a dedicated setter.
	 * 
	 * @param
	 */
	public void setBar(Bar140 bar) {
		this.bar = bar;
	}

	/**
	 */
	@Override
	public Bar140 getBar() {
		return bar;
	}

     public String toString() {
        return "Foo140 {"
				+ "bar: " + bar
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private Bar140 bar;

		public Builder withBar(Bar140 bar) {
			this.bar = bar;
			return this;
		}

		public Foo140 build() {
			Foo140 _object = new Foo140();
			_object.setBar(bar);
			return _object;
		}
	}
}
