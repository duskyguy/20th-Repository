/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.server.allGraphQLCases;

import java.util.HashMap;
import java.util.Map;


import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;


/**
 * ############################
 *  test for issue #130
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */

@GraphQLObjectType("Field")
@SuppressWarnings("unused")
public class Field 
{


	public Field(){
		// No action
	}

	/**
	 *  Generates a clash between the java classname, and the enum that contains the list of of fields.
	 */
	@GraphQLScalar(fieldName = "someValue", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String someValue;



	/**
	 *  Generates a clash between the java classname, and the enum that contains the list of of fields.
	 */
	public void setSomeValue(java.lang.String someValue) {
		this.someValue = someValue;
	}

	/**
	 *  Generates a clash between the java classname, and the enum that contains the list of of fields.
	*/
	public java.lang.String getSomeValue() {
		return someValue;
	}
		

     public String toString() {
        return "Field {"
				+ "someValue: " + someValue
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private java.lang.String someValue;

		public Builder withSomeValue(java.lang.String someValue) {
			this.someValue = someValue;
			return this;
		}

		public Field build() {
			Field _object = new Field();
			_object.setSomeValue(someValue);
			return _object;
		}
	}
}
