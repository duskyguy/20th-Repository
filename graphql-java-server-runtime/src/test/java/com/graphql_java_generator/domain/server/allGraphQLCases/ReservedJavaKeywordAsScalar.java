/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.server.allGraphQLCases;

import java.util.HashMap;
import java.util.Map;


import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;


/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */

@GraphQLObjectType("ReservedJavaKeywordAsScalar")
@SuppressWarnings("unused")
public class ReservedJavaKeywordAsScalar 
{


	public ReservedJavaKeywordAsScalar(){
		// No action
	}

	@GraphQLScalar(fieldName = "if", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _if;


	@GraphQLScalar(fieldName = "implements", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _implements;


	@GraphQLScalar(fieldName = "import", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _import;


	@GraphQLScalar(fieldName = "instanceof", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _instanceof;


	@GraphQLScalar(fieldName = "int", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _int;


	@GraphQLScalar(fieldName = "interface", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _interface;


	@GraphQLScalar(fieldName = "long", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _long;


	@GraphQLScalar(fieldName = "native", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _native;


	@GraphQLScalar(fieldName = "new", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _new;


	@GraphQLScalar(fieldName = "package", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _package;


	@GraphQLScalar(fieldName = "private", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _private;


	@GraphQLScalar(fieldName = "protected", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _protected;


	@GraphQLScalar(fieldName = "public", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _public;


	@GraphQLScalar(fieldName = "return", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _return;


	@GraphQLScalar(fieldName = "short", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _short;


	@GraphQLScalar(fieldName = "static", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _static;


	@GraphQLScalar(fieldName = "strictfp", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _strictfp;


	@GraphQLScalar(fieldName = "super", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _super;


	@GraphQLScalar(fieldName = "switch", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _switch;


	@GraphQLScalar(fieldName = "synchronized", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _synchronized;


	@GraphQLScalar(fieldName = "this", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _this;


	@GraphQLScalar(fieldName = "throw", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _throw;


	@GraphQLScalar(fieldName = "throws", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _throws;


	@GraphQLScalar(fieldName = "transient", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _transient;


	@GraphQLScalar(fieldName = "try", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _try;


	@GraphQLScalar(fieldName = "void", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _void;


	@GraphQLScalar(fieldName = "volatile", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _volatile;


	@GraphQLScalar(fieldName = "while", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _while;



	public void setIf(java.lang.String _if) {
		this._if = _if;
	}

	public java.lang.String getIf() {
		return _if;
	}
		

	public void setImplements(java.lang.String _implements) {
		this._implements = _implements;
	}

	public java.lang.String getImplements() {
		return _implements;
	}
		

	public void setImport(java.lang.String _import) {
		this._import = _import;
	}

	public java.lang.String getImport() {
		return _import;
	}
		

	public void setInstanceof(java.lang.String _instanceof) {
		this._instanceof = _instanceof;
	}

	public java.lang.String getInstanceof() {
		return _instanceof;
	}
		

	public void setInt(java.lang.String _int) {
		this._int = _int;
	}

	public java.lang.String getInt() {
		return _int;
	}
		

	public void setInterface(java.lang.String _interface) {
		this._interface = _interface;
	}

	public java.lang.String getInterface() {
		return _interface;
	}
		

	public void setLong(java.lang.String _long) {
		this._long = _long;
	}

	public java.lang.String getLong() {
		return _long;
	}
		

	public void setNative(java.lang.String _native) {
		this._native = _native;
	}

	public java.lang.String getNative() {
		return _native;
	}
		

	public void setNew(java.lang.String _new) {
		this._new = _new;
	}

	public java.lang.String getNew() {
		return _new;
	}
		

	public void setPackage(java.lang.String _package) {
		this._package = _package;
	}

	public java.lang.String getPackage() {
		return _package;
	}
		

	public void setPrivate(java.lang.String _private) {
		this._private = _private;
	}

	public java.lang.String getPrivate() {
		return _private;
	}
		

	public void setProtected(java.lang.String _protected) {
		this._protected = _protected;
	}

	public java.lang.String getProtected() {
		return _protected;
	}
		

	public void setPublic(java.lang.String _public) {
		this._public = _public;
	}

	public java.lang.String getPublic() {
		return _public;
	}
		

	public void setReturn(java.lang.String _return) {
		this._return = _return;
	}

	public java.lang.String getReturn() {
		return _return;
	}
		

	public void setShort(java.lang.String _short) {
		this._short = _short;
	}

	public java.lang.String getShort() {
		return _short;
	}
		

	public void setStatic(java.lang.String _static) {
		this._static = _static;
	}

	public java.lang.String getStatic() {
		return _static;
	}
		

	public void setStrictfp(java.lang.String _strictfp) {
		this._strictfp = _strictfp;
	}

	public java.lang.String getStrictfp() {
		return _strictfp;
	}
		

	public void setSuper(java.lang.String _super) {
		this._super = _super;
	}

	public java.lang.String getSuper() {
		return _super;
	}
		

	public void setSwitch(java.lang.String _switch) {
		this._switch = _switch;
	}

	public java.lang.String getSwitch() {
		return _switch;
	}
		

	public void setSynchronized(java.lang.String _synchronized) {
		this._synchronized = _synchronized;
	}

	public java.lang.String getSynchronized() {
		return _synchronized;
	}
		

	public void setThis(java.lang.String _this) {
		this._this = _this;
	}

	public java.lang.String getThis() {
		return _this;
	}
		

	public void setThrow(java.lang.String _throw) {
		this._throw = _throw;
	}

	public java.lang.String getThrow() {
		return _throw;
	}
		

	public void setThrows(java.lang.String _throws) {
		this._throws = _throws;
	}

	public java.lang.String getThrows() {
		return _throws;
	}
		

	public void setTransient(java.lang.String _transient) {
		this._transient = _transient;
	}

	public java.lang.String getTransient() {
		return _transient;
	}
		

	public void setTry(java.lang.String _try) {
		this._try = _try;
	}

	public java.lang.String getTry() {
		return _try;
	}
		

	public void setVoid(java.lang.String _void) {
		this._void = _void;
	}

	public java.lang.String getVoid() {
		return _void;
	}
		

	public void setVolatile(java.lang.String _volatile) {
		this._volatile = _volatile;
	}

	public java.lang.String getVolatile() {
		return _volatile;
	}
		

	public void setWhile(java.lang.String _while) {
		this._while = _while;
	}

	public java.lang.String getWhile() {
		return _while;
	}
		

     public String toString() {
        return "ReservedJavaKeywordAsScalar {"
				+ "_if: " + _if
				+ ", "
				+ "_implements: " + _implements
				+ ", "
				+ "_import: " + _import
				+ ", "
				+ "_instanceof: " + _instanceof
				+ ", "
				+ "_int: " + _int
				+ ", "
				+ "_interface: " + _interface
				+ ", "
				+ "_long: " + _long
				+ ", "
				+ "_native: " + _native
				+ ", "
				+ "_new: " + _new
				+ ", "
				+ "_package: " + _package
				+ ", "
				+ "_private: " + _private
				+ ", "
				+ "_protected: " + _protected
				+ ", "
				+ "_public: " + _public
				+ ", "
				+ "_return: " + _return
				+ ", "
				+ "_short: " + _short
				+ ", "
				+ "_static: " + _static
				+ ", "
				+ "_strictfp: " + _strictfp
				+ ", "
				+ "_super: " + _super
				+ ", "
				+ "_switch: " + _switch
				+ ", "
				+ "_synchronized: " + _synchronized
				+ ", "
				+ "_this: " + _this
				+ ", "
				+ "_throw: " + _throw
				+ ", "
				+ "_throws: " + _throws
				+ ", "
				+ "_transient: " + _transient
				+ ", "
				+ "_try: " + _try
				+ ", "
				+ "_void: " + _void
				+ ", "
				+ "_volatile: " + _volatile
				+ ", "
				+ "_while: " + _while
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private java.lang.String _if;
		private java.lang.String _implements;
		private java.lang.String _import;
		private java.lang.String _instanceof;
		private java.lang.String _int;
		private java.lang.String _interface;
		private java.lang.String _long;
		private java.lang.String _native;
		private java.lang.String _new;
		private java.lang.String _package;
		private java.lang.String _private;
		private java.lang.String _protected;
		private java.lang.String _public;
		private java.lang.String _return;
		private java.lang.String _short;
		private java.lang.String _static;
		private java.lang.String _strictfp;
		private java.lang.String _super;
		private java.lang.String _switch;
		private java.lang.String _synchronized;
		private java.lang.String _this;
		private java.lang.String _throw;
		private java.lang.String _throws;
		private java.lang.String _transient;
		private java.lang.String _try;
		private java.lang.String _void;
		private java.lang.String _volatile;
		private java.lang.String _while;

		public Builder withIf(java.lang.String _if) {
			this._if = _if;
			return this;
		}
		public Builder withImplements(java.lang.String _implements) {
			this._implements = _implements;
			return this;
		}
		public Builder withImport(java.lang.String _import) {
			this._import = _import;
			return this;
		}
		public Builder withInstanceof(java.lang.String _instanceof) {
			this._instanceof = _instanceof;
			return this;
		}
		public Builder withInt(java.lang.String _int) {
			this._int = _int;
			return this;
		}
		public Builder withInterface(java.lang.String _interface) {
			this._interface = _interface;
			return this;
		}
		public Builder withLong(java.lang.String _long) {
			this._long = _long;
			return this;
		}
		public Builder withNative(java.lang.String _native) {
			this._native = _native;
			return this;
		}
		public Builder withNew(java.lang.String _new) {
			this._new = _new;
			return this;
		}
		public Builder withPackage(java.lang.String _package) {
			this._package = _package;
			return this;
		}
		public Builder withPrivate(java.lang.String _private) {
			this._private = _private;
			return this;
		}
		public Builder withProtected(java.lang.String _protected) {
			this._protected = _protected;
			return this;
		}
		public Builder withPublic(java.lang.String _public) {
			this._public = _public;
			return this;
		}
		public Builder withReturn(java.lang.String _return) {
			this._return = _return;
			return this;
		}
		public Builder withShort(java.lang.String _short) {
			this._short = _short;
			return this;
		}
		public Builder withStatic(java.lang.String _static) {
			this._static = _static;
			return this;
		}
		public Builder withStrictfp(java.lang.String _strictfp) {
			this._strictfp = _strictfp;
			return this;
		}
		public Builder withSuper(java.lang.String _super) {
			this._super = _super;
			return this;
		}
		public Builder withSwitch(java.lang.String _switch) {
			this._switch = _switch;
			return this;
		}
		public Builder withSynchronized(java.lang.String _synchronized) {
			this._synchronized = _synchronized;
			return this;
		}
		public Builder withThis(java.lang.String _this) {
			this._this = _this;
			return this;
		}
		public Builder withThrow(java.lang.String _throw) {
			this._throw = _throw;
			return this;
		}
		public Builder withThrows(java.lang.String _throws) {
			this._throws = _throws;
			return this;
		}
		public Builder withTransient(java.lang.String _transient) {
			this._transient = _transient;
			return this;
		}
		public Builder withTry(java.lang.String _try) {
			this._try = _try;
			return this;
		}
		public Builder withVoid(java.lang.String _void) {
			this._void = _void;
			return this;
		}
		public Builder withVolatile(java.lang.String _volatile) {
			this._volatile = _volatile;
			return this;
		}
		public Builder withWhile(java.lang.String _while) {
			this._while = _while;
			return this;
		}

		public ReservedJavaKeywordAsScalar build() {
			ReservedJavaKeywordAsScalar _object = new ReservedJavaKeywordAsScalar();
			_object.setIf(_if);
			_object.setImplements(_implements);
			_object.setImport(_import);
			_object.setInstanceof(_instanceof);
			_object.setInt(_int);
			_object.setInterface(_interface);
			_object.setLong(_long);
			_object.setNative(_native);
			_object.setNew(_new);
			_object.setPackage(_package);
			_object.setPrivate(_private);
			_object.setProtected(_protected);
			_object.setPublic(_public);
			_object.setReturn(_return);
			_object.setShort(_short);
			_object.setStatic(_static);
			_object.setStrictfp(_strictfp);
			_object.setSuper(_super);
			_object.setSwitch(_switch);
			_object.setSynchronized(_synchronized);
			_object.setThis(_this);
			_object.setThrow(_throw);
			_object.setThrows(_throws);
			_object.setTransient(_transient);
			_object.setTry(_try);
			_object.setVoid(_void);
			_object.setVolatile(_volatile);
			_object.setWhile(_while);
			return _object;
		}
	}
}
